<!DOCTYPE html>
<html lang="id">
  <head>
    <meta charset="UTF-8" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" />
    <link rel="stylesheet" type="text/css" href="/css/style.css" />
    <title>Dashboard</title>
  </head>
  <body>
    <div class="d-flex vh-100">
      <div class="py-4 box border-end d-flex flex-column justify-content-between align-items-center bg-white" style="width: 5%; height: 100vh">
        <div></div>
        <!-- Spacer atas -->
        <button type="submit" class="btn btn-danger" onclick="logout()"><i class="bi bi-box-arrow-right"></i></button>
      </div>
      <div class="d-flex flex-column w-100">
        <div class="container flex-grow-1 my-4 bg-white shadow-sm p-4 border rounded">
          <div class="d-flex justify-content-between mt-2">
            <h4 class="mb-1">Daftar Tugas</h4>
            <button class="btn btn-success" onclick="showAddModal()"><i class="bi bi-plus"></i> Tambah Tugas</button>
          </div>
          <div class="mt-4">
            <div class="dropdown">
              <button class="btn btn-outline-primary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false"><i class="bi bi-filter"></i> Semua</button>
              <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="#">Semua</a></li>
                <li><a class="dropdown-item" href="#">Kuliah</a></li>
                <li><a class="dropdown-item" href="#">Organisasi</a></li>
                <li><a class="dropdown-item" href="#">Pribadi</a></li>
              </ul>
            </div>
          </div>
          <div class="mt-3">
            <table class="table table-hover table-striped table-light rounded-3 overflow-hidden">
              <thead>
                <tr>
                  <th scope="col" class="text-center" style="width: 50px">No.</th>
                  <th scope="col">Tugas</th>
                  <th scope="col" class="text-center" style="width: 150px">Kategori</th>
                  <th scope="col" class="text-center" style="width: 200px">Deadline</th>
                  <th scope="col" class="text-center" style="width: 150px">Status</th>
                  <th scope="col" class="text-center" style="width: 150px">Aksi</th>
                </tr>
              </thead>
              <tbody id="taskList"></tbody>
            </table>
          </div>

          <!-- Modal untuk tambah tugas -->
          <div class="modal fade" id="modalTambah" tabindex="-1" aria-labelledby="modalTambahLabel" aria-hidden="true">
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="editTaskModalLabel">Tambah Tugas</h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                  <div class="input-group mb-4">
                    <span class="input-group-text fw-semibold" style="width: 120px">Nama Tugas</span>
                    <input type="text" id="title" class="form-control" required />
                  </div>
                  <div class="input-group mb-4">
                    <span class="input-group-text fw-semibold" style="width: 120px">Kategori</span>
                    <select class="form-select" id="category">
                      <option value="Kuliah">Kuliah</option>
                      <option value="Organisasi">Organisasi</option>
                      <option value="Pribadi">Pribadi</option>
                    </select>
                  </div>
                  <div class="input-group mb-4">
                    <span class="input-group-text fw-semibold" style="width: 120px">Deadline</span>
                    <input type="date" id="deadline" class="form-control" required />
                  </div>
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                  <button type="button" class="btn btn-success" onclick="tambahTugas()">Tambah</button>
                </div>
              </div>
            </div>
          </div>

          <!-- Modal untuk edit tugas -->
          <div class="modal fade" id="modalEdit" tabindex="-1" aria-labelledby="modal" aria-hidden="true">
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="editTaskModalLabel">Edit Tugas</h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                  <div class="input-group mb-4">
                    <span class="input-group-text fw-semibold" style="width: 120px">Nama Tugas</span>
                    <input type="text" id="editTitle" class="form-control" required />
                  </div>
                  <div class="input-group mb-4">
                    <span class="input-group-text fw-semibold" style="width: 120px">Kategori</span>
                    <select class="form-select" id="editCategory">
                      <option value="Kuliah">Kuliah</option>
                      <option value="Organisasi">Organisasi</option>
                      <option value="Pribadi">Pribadi</option>
                    </select>
                  </div>
                  <div class="input-group mb-4">
                    <span class="input-group-text fw-semibold" style="width: 120px">Deadline</span>
                    <input type="date" id="editDeadline" class="form-control" required />
                  </div>
                  <div class="input-group mb-4">
                    <span class="input-group-text fw-semibold" style="width: 120px">Status</span>
                    <select class="form-select" id="editStatus">
                      <option value="Belum Selesai">Belum Selesai</option>
                      <option value="Selesai">Selesai</option>
                    </select>
                  </div>
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                  <button type="button" class="btn btn-success" onclick="editTugas()">Simpan</button>
                </div>
              </div>
            </div>
          </div>

          <!-- Modal untuk hapus tugas -->
          <div class="modal fade" id="modalHapus" tabindex="-1" aria-labelledby="modalHapusLabel" aria-hidden="true">
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="editTaskModalLabel">Hapus Tugas</h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">Apakah Anda yakin ingin menghapus tugas ini?</div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                  <button type="button" class="btn btn-danger" onclick="hapusTugas()">Hapus</button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <script>
      // Fungsi untuk menampilkan modal tambah tugas
      function showAddModal() {
        new bootstrap.Modal(document.getElementById("modalTambah")).show();
      }

      //Tambah tugas
      async function tambahTugas() {
        const title = document.getElementById("title").value;
        const category = document.getElementById("category").value;
        const deadline = document.getElementById("deadline").value;

        const response = await fetch("/api/tasks", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${localStorage.getItem("token")}`,
          },
          body: JSON.stringify({ title, category, deadline }),
        });

        if (response.ok) {
          const data = await response.json();
          const task_id = data.task_id;
          document.getElementById("title").value = "";
          document.getElementById("category").value = "Kuliah";
          document.getElementById("deadline").value = "";
          const modalTambah = bootstrap.Modal.getInstance(document.getElementById("modalTambah"));
          modalTambah.hide();
          loadTasks();
        }
      }

      // Fungsi untuk menampilkan modal edit tugas
      async function showEditModal(taskId) {
        const response = await fetch(`/api/tasks/${taskId}`, {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${localStorage.getItem("token")}`,
          },
        });

        if (response.ok) {
          const data = await response.json();
          console.log("Data tugas yang diterima:", data);

          document.getElementById("editTitle").value = data.task.title;
          document.getElementById("editCategory").value = data.task.category;
          // Konversi deadline agar tidak bergeser sehari
          const utcDate = new Date(data.task.deadline); //Format dikirim dalam UTC
          const localDate = new Date(utcDate.getTime() - utcDate.getTimezoneOffset() * 60000); //Konversi ke local
          document.getElementById("editDeadline").value = localDate.toISOString().split("T")[0]; //Biar ngak keambil jam, hanya ambil tanggal
          document.getElementById("editStatus").value = data.task.status;

          currentTaskId = taskId;
          new bootstrap.Modal(document.getElementById("modalEdit")).show();
        } else {
          alert("Gagal mengambil data tugas.");
        }
      }

      //Edit tugas
      async function editTugas() {
        const title = document.getElementById("editTitle").value;
        const category = document.getElementById("editCategory").value;
        const deadline = document.getElementById("editDeadline").value;
        const status = document.getElementById("editStatus").value;

        const response = await fetch(`/api/tasks/${currentTaskId}`, {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${localStorage.getItem("token")}`,
            a,
          },
          body: JSON.stringify({ title, category, deadline, status }),
        });

        if (response.ok) {
          const data = await response.json();
          const modalEdit = bootstrap.Modal.getInstance(document.getElementById("modalEdit"));
          modalEdit.hide();
          loadTasks();
        }
      }

      // Fungsi untuk menampilkan modal hapus tugas
      async function showDeleteModal(taskId) {
        currentTaskId = taskId;
        new bootstrap.Modal(document.getElementById("modalHapus")).show();
      }

      //Hapus tugas
      async function hapusTugas() {
        const response = await fetch(`/api/tasks/${currentTaskId}`, {
          method: "DELETE",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${localStorage.getItem("token")}`,
          },
        });

        if (response.ok) {
          const data = await response.json();
          const modalHapus = bootstrap.Modal.getInstance(document.getElementById("modalHapus"));
          modalHapus.hide();
          loadTasks();
        }
      }

      // Ganti isi dari Dropdown filter
      document.addEventListener("DOMContentLoaded", function () {
        const dropdownButton = document.querySelector(".dropdown-toggle");
        const dropdownItems = document.querySelectorAll(".dropdown-item");

        dropdownItems.forEach((item) => {
          item.addEventListener("click", function (event) {
            event.preventDefault();
            dropdownButton.innerHTML = `<i class="bi bi-filter"></i> ${this.textContent}`;
          });
        });
      });

      async function loadTasks() {
        const token = localStorage.getItem("token");
        try {
          const response = await fetch("/api/tasks", {
            method: "GET",
            headers: {
              Authorization: `Bearer ${token}`,
            },
          });

          const data = await response.json();
          const taskList = document.getElementById("taskList");

          // Jika tidak ada tugas
          if (!data.tasks || data.tasks.length === 0) {
            taskList.innerHTML = "<tr><td colspan='6' class='text-center'>Tidak ada tugas... Anda bisa bermalas-malasan, mantap!</td></tr>";
            return;
          }

          // Jika ada tugas
          taskList.innerHTML = data.tasks
            .map((task, index) => {
              // Format tanggal agar lebih rapi
              const deadlineFormatted = new Date(task.deadline).toLocaleDateString("id-ID", {
                day: "2-digit",
                month: "long",
                year: "numeric",
              });

              return `
                <tr>
                    <td class="text-center">${index + 1}</td>
                    <td>${task.title}</td>
                    <td class="text-center">${task.category}</td>
                    <td class="text-center">${deadlineFormatted}</td>
                    <td class="text-center">${task.status}</td>
                    <td class="text-center">
                        <button class="btn btn-primary btn-sm" onclick="showEditModal(${task.id})">
                            <i class="bi bi-pencil"></i>
                        </button>
                        <button class="btn btn-danger btn-sm" onclick="showDeleteModal(${task.id})">
                            <i class="bi bi-trash"></i>
                        </button>
                    </td>
                </tr>
            `;
            })
            .join("");
        } catch (error) {
          document.getElementById("taskList").innerHTML = `
            <tr><td colspan='6' class='text-center text-danger'>Gagal memuat tugas... Coba lagi nanti.</td></tr>
        `;
        }
      }

      // Logout
      function logout() {
        localStorage.removeItem("token");
        window.location.href = "/";
      }

      document.addEventListener("DOMContentLoaded", loadTasks);
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
  </body>
</html>
